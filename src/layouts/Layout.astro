---
interface Props {
	title: string;
}

import '../styles/fonts.css';
import Haptics from '../components/Haptics.astro';
const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<!-- Critical styles - Must load first -->
		<style>
			[x-cloak] { display: none !important; }
		</style>
		<meta name="description" content="Chromoly Labs - Building Digital Products That Matter" />
		<meta name="viewport" content="width=device-width" />
		{import.meta.env.PROD && Astro.url.protocol === 'http:' && 
			<meta http-equiv="refresh" content="0;url=https://chromolylabs.com" />
		}
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<!-- Preload critical fonts -->
		<link rel="preload" href="/fonts/SpaceGrotesk-Regular.woff2" as="font" type="font/woff2" crossorigin />
		<link rel="preload" href="/fonts/SpaceGrotesk-Medium.woff2" as="font" type="font/woff2" crossorigin />
		<link rel="preload" href="/fonts/ShareTechMono-Regular.woff2" as="font" type="font/woff2" crossorigin />
		<link rel="preload" href="/fonts/JetBrainsMono-Regular.woff2" as="font" type="font/woff2" crossorigin />
		<title>{title}</title>
		<script is:inline src="https://cdn.jsdelivr.net/npm/alpinejs@3.14.8/dist/cdn.min.js" defer></script>
		<Haptics />
	</head>
	<body class="bg-space-black text-starlight min-h-screen">
		<div class="relative z-0">
			<!-- Star field background -->
			<div class="fixed inset-0 bg-star-field opacity-50 -z-20"></div>
			<!-- Nebula effect -->
			<div class="fixed inset-0 bg-gradient-radial from-nebula/5 via-transparent to-transparent -z-10"></div>
			<!-- Content -->
			<slot />
		</div>
		<style is:global>
			@tailwind base;
			@tailwind components;
			@tailwind utilities;

			@layer base {
				html {
					scroll-behavior: smooth;
				}
			}

			.neon-text {
				text-shadow: 0 0 10px theme("colors.neon"), 0 0 20px theme("colors.neon");
			}

			.plasma-glow {
				text-shadow: 0 0 10px theme("colors.plasma"), 0 0 20px theme("colors.plasma");
			}

			.chrome-text {
				background: linear-gradient(to right, 
					theme("colors.chrome"), 
					theme("colors.starlight"), 
					theme("colors.chrome"));
				-webkit-background-clip: text;
				background-clip: text;
				color: transparent;
				text-shadow: 0 0 8px theme("colors.chrome/3"),
							0 0 16px theme("colors.chrome/0.5");
			}

			.space-gradient {
				background: linear-gradient(45deg, theme("colors.cosmic-blue"), theme("colors.deep-space"));
			}

			.glitch {
				position: relative;
				text-shadow: 0.05em 0 0 theme("colors.nasa-red"), 
							-0.025em -0.05em 0 theme("colors.cosmic-blue"),
							0.025em 0.05em 0 theme("colors.plasma");
				animation: glitch 500ms infinite;
			}

			@keyframes glitch {
				0% {
					text-shadow: 0.05em 0 0 theme("colors.nasa-red"), 
								-0.05em -0.025em 0 theme("colors.cosmic-blue"),
								-0.025em 0.05em 0 theme("colors.plasma");
				}
				14% {
					text-shadow: 0.05em 0 0 theme("colors.nasa-red"), 
								-0.05em -0.025em 0 theme("colors.cosmic-blue"),
								-0.025em 0.05em 0 theme("colors.plasma");
				}
				15% {
					text-shadow: -0.05em -0.025em 0 theme("colors.nasa-red"),
								0.025em 0.025em 0 theme("colors.cosmic-blue"),
								-0.05em -0.05em 0 theme("colors.plasma");
				}
				49% {
					text-shadow: -0.05em -0.025em 0 theme("colors.nasa-red"),
								0.025em 0.025em 0 theme("colors.cosmic-blue"),
								-0.05em -0.05em 0 theme("colors.plasma");
				}
				50% {
					text-shadow: 0.025em 0.05em 0 theme("colors.nasa-red"),
								0.05em 0 0 theme("colors.cosmic-blue"),
								0 -0.05em 0 theme("colors.plasma");
				}
				99% {
					text-shadow: 0.025em 0.05em 0 theme("colors.nasa-red"),
								0.05em 0 0 theme("colors.cosmic-blue"),
								0 -0.05em 0 theme("colors.plasma");
				}
				100% {
					text-shadow: -0.025em 0 0 theme("colors.nasa-red"),
								-0.025em -0.025em 0 theme("colors.cosmic-blue"),
								-0.025em -0.05em 0 theme("colors.plasma");
				}
			}

			@keyframes float {
				0%, 100% { transform: translateY(0px); }
				50% { transform: translateY(-20px); }
			}

			.float {
				animation: float 6s ease-in-out infinite;
			}

			@keyframes twinkle {
				0%, 100% { opacity: 1; }
				50% { opacity: 0.3; }
			}

			.twinkle {
				animation: twinkle 2s ease-in-out infinite;
			}

			.scanline {
				position: relative;
				overflow: hidden;
			}
			
			.scanline::after {
				content: "";
				position: absolute;
				inset: 0;
				background: repeating-linear-gradient(
					0deg,
					transparent 0%,
					rgba(255, 255, 255, 0.05) 0.5%,
					transparent 1%
				);
				animation: scan 8s linear infinite;
			}

			@keyframes scan {
				from { transform: translateY(-100%); }
				to { transform: translateY(100%); }
			}

			@keyframes fadeInUp {
				from {
					opacity: 0;
					transform: translateY(20px);
				}
				to {
					opacity: 1;
					transform: translateY(0);
				}
			}

			.fade-in-up {
				opacity: 0;
				animation: fadeInUp 0.6s ease-out forwards;
			}

			.delay-100 {
				animation-delay: 100ms;
			}

			.delay-200 {
				animation-delay: 200ms;
			}

			.delay-300 {
				animation-delay: 300ms;
			}

			.delay-400 {
				animation-delay: 400ms;
			}

			.delay-500 {
				animation-delay: 500ms;
			}
		</style>
	</body>
</html>
